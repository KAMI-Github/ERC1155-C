name: KAMI721C CI/CD

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint

            - name: Run tests
              run: npm test

            - name: Run coverage
              run: npm run coverage

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}

    deploy-testnet:
        needs: test
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Create .env file
              run: |
                  echo "PRIVATE_KEY=${{ secrets.DEPLOYER_PRIVATE_KEY }}" > .env
                  echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env
                  echo "POLYGONSCAN_API_KEY=${{ secrets.POLYGONSCAN_API_KEY }}" >> .env
                  echo "ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}" >> .env
                  echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" >> .env

            - name: Deploy to Sepolia
              run: npx hardhat run scripts/deploy_upgradeable.ts --network sepolia

            - name: Verify on Etherscan
              run: npx hardhat verify --network sepolia ${{ steps.deploy.outputs.contractAddress }}
              env:
                  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

    deploy-mainnet:
        needs: deploy-testnet
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Create .env file
              run: |
                  echo "PRIVATE_KEY=${{ secrets.DEPLOYER_PRIVATE_KEY }}" > .env
                  echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env
                  echo "POLYGONSCAN_API_KEY=${{ secrets.POLYGONSCAN_API_KEY }}" >> .env
                  echo "ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}" >> .env
                  echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" >> .env

            - name: Deploy to Ethereum Mainnet
              run: npx hardhat run scripts/deploy_upgradeable.ts --network mainnet

            - name: Verify on Etherscan
              run: npx hardhat verify --network mainnet ${{ steps.deploy.outputs.contractAddress }}
              env:
                  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

    deploy-polygon:
        needs: deploy-testnet
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Create .env file
              run: |
                  echo "PRIVATE_KEY=${{ secrets.DEPLOYER_PRIVATE_KEY }}" > .env
                  echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env
                  echo "POLYGONSCAN_API_KEY=${{ secrets.POLYGONSCAN_API_KEY }}" >> .env
                  echo "ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}" >> .env
                  echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" >> .env

            - name: Deploy to Polygon Mainnet
              run: npx hardhat run scripts/deploy_upgradeable.ts --network polygon

            - name: Verify on Polygonscan
              run: npx hardhat verify --network polygon ${{ steps.deploy.outputs.contractAddress }}
              env:
                  POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
